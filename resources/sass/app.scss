// Colors
@import 'colors';

// Variables
@import 'variables';

// Bootstrap
@import 'bootstrap/scss/bootstrap';

//
// Custom Components
//

// Defaults for SVG-Sprite Elements
symbol {
    fill: currentColor;
}

// Defaults for Bootstrap Icons
// - https://icons.getbootstrap.com
.bi {
    display: inline-block;
    vertical-align: -0.125em;
    width: 1em;
    height: 1em;
}

.bi-fluid {
    display: block;
    width: auto;
    height: auto;
    aspect-ratio: 1 / 1;
}

//
// Links
//

// Same appearance as BS's `.disabled` class for nav links
a.disabled {
    color: rgba(var(--bs-emphasis-color-rgb), 0.3);
    pointer-events: none;
    cursor: default;
}

a .link-text {
    text-decoration: inherit;
}

//
// App Logo
//

// Usage: <svg class="app-logo"><use xlink:href="#ladis-logo"></use></svg>

:root {
    // Default size for the logo
    --app-logo-size: 4em;
    // Logo size in the header naviation
    --app-logo-size-nav: 2.2222em;
    // Default color for the logo inherited from the parent element
    --app-logo-color: currentColor;
    // Individual colors that fall back to the common color
    --app-logo-primary-color: var(--app-logo-color);
    --app-logo-accent-color: var(--app-logo-color);
}

// Base styles for the app logo
.app-logo {
    inline-size: var(--app-logo-size);
    aspect-ratio: 1 / 1;
    color: var(--app-logo-color);
    transition: color 0.3s ease;
}

// Styles for the logo ring
.app-logo-primary {
    color: var(--app-logo-primary-color);
}

// Styles for the logo spark
.app-logo-accent {
    color: var(--app-logo-accent-color);
}

//
// Navigation Bar
//

// Nabvar Light Mode Colors
.navbar,
.navbar-nav,
.nav-link {
    --bs-navbar-color: var(--bs-body-color);
    --bs-navbar-hover-color: #{$link-color};
    --bs-navbar-link-color: var(--bs-body-color);
    --bs-navbar-link-hover-color: #{$link-color};
    --bs-navbar-brand-color: var(--bs-body-color);
    --bs-navbar-brand-hover-color: #{$link-color};
    --bs-navbar-active-color: var(--bs-navbar-link-color);
}

// Mobile Menu Button
.navbar-toggler {
    border: none;
    background-color: transparent;
}

// Navbar App Logo
.navbar .app-logo {
    // Adjust logo size in navbar
    --app-logo-size: var(--app-logo-size-nav);
    // Make the primary logo color stick to the navbar base color.
    // Accent color still inherits from the parent element and adjusts
    // to the hover color.
    --app-logo-primary-color: var(--bs-navbar-color);
}

.nav-link {
    // Prevent text in navbar links to break on smaller viewports
    white-space: nowrap;
}

// Make sure icon and text stay on the same line in composed nav links
.nav-link.has-icon {
    display: inline-flex;
    flex-wrap: nowrap;
    align-items: center;
}

.link-text {
    display: inline-block;
}

// Nav Items Active states
.nav-link.active,
.nav-item .dropdown-item.active,
.nav-item .dropdown-item:active,
// Target the parent element of the active dropdown item
.nav-item.dropdown:has(.dropdown-item.active) .dropdown-toggle {
    font-weight: #{$font-weight-medium};
}

.nav-item .dropdown-item.active,
.nav-item .dropdown-item:active {
    color: var(--bs-dropdown-link-color);
    background-color: transparent;
}

//
// Forms
//

.card .form-text {
    // Allow form help text to wrap inside card containers
    white-space: normal;
    overflow-wrap: anywhere;
}

.auth-icon {
    width: 80px;
    height: 80px;
}

.form-floating textarea.form-control {
    height: 120px;
}

//
// Dropdown
//

// Reset the default min-width of the dropdown body.
// Usefull for small dropdowns like the language picker.
.dropdown-menu-size-auto {
    --bs-dropdown-min-width: initial;
}

//
// Generic container-like components
//

// Viewport Section
.vh-section {
    // Calculate the height
    // To do: Do this in `:root`
    min-height: calc(100vh - ($navbar-padding-y * 2) - ($navbar-brand-font-size / $font-size-base * var(--app-logo-size-nav)) - ($navbar-brand-padding-y * 2));
    display: flex;
    flex-direction: column;
    justify-content: center;
}

// Content container
// Restricts the width of the content to readable width
.content {
    max-width: 60ch;
}

// Utility class to maintain a vertical rhythm in flow content sections
:root {
    --flow-gap: 1em;
    --flow-gap-medium: 1.5em;
    --flow-gap-large: 3em;
    --flow-gap-start: var(--flow-gap-medium);
    --flow-gap-end: var(--flow-gap);
}

.flow>*:not(.row, hr) {
    margin-block-start: var(--flow-gap-start);
    margin-block-end: var(--flow-gap-end);
}

.flow>*:first-child {
    margin-block-start: 0;
}

.flow>*:last-child {
    margin-block-end: 0;
}

// Use a larger gap for horizontal rules.
.flow>hr {
    margin-block: var(--flow-gap-large);
}

//
// Description List
//
// Horizontal layout that breaks to a vertical layout on small viewports.

.dl-container {
    container-type: inline-size;
    container-name: dl-container;
}

.dl-container dl {
    display: grid;
    grid-template-columns: auto 1fr;
    margin-block: 0;
    column-gap: calc(var(--flow-gap) * 2);
    row-gap: var(--flow-gap);
}

.dl-container dt,
.dl-container dd {
    margin-block: 0;
}

// Container query for the vertical layout.
@container dl-container (max-width: 30ch) {
    .dl-container dl {
        display: block;
    }

    .dl-container dd+* {
        margin-block-start: var(--flow-gap);
    }
}

//
// Figures & Figcaptions
//
.figure-caption {
    margin-block-start: 1em;
}

.figure img {
    transition: transform .5s ease;
}

.figure img:hover {
    transform: scale(1.05);
}

//
// Regular Page Sections
//

.page-body {
    // Prevent horizontal overflow induced by grid gutters in page body
    overflow-x: hidden;
}

// Page Title
.page-title:only-child {
    // Important is required becaus Bootstraps margin classes use it.
    margin-block-end: 0 !important;
}

//
// Hero section â€“ Flashy page intro component
//

.hero {
    // Use a responsive font size relative to the viewport
    font-size: clamp(1.25rem, 4vw, 2rem);
    margin-block: 3em;
}

.hero-title {
    font-size: 3em;
    line-height: 1;
    padding-block-end: .5em;
    margin-block-end: .5em;
    border-bottom: 1px solid;
}

.hero .brand-name {
    font-style: italic;
    font-weight: 600;
}

//
// Site Footer
//

.site-footer {
    --bs-link-color-rgb: var(--bs-body-color);
}

.site-footer .bi {
    font-size: 1.5em;
}

//
// Custom component includes
//

@import 'components/card';
@import 'components/contact';
@import 'components/table';

//
// Dark Mode
//

// SASS variables for Dark color mode are far from complete in BS.
// We use media queries to fill in the gaps.

// Styles for `:root`
@include color-mode(dark, true) {
    --link-disabled-color: #{$body-tertiary-color-dark};
}

// BS defines custom properties on specific selectors, too.
@include color-mode(dark) {
    .text-secondary {
        // Override the default color for secondary text
        // The fact that we have to use `!important` tells a lot about the state of BS.
        color: #{$teal} !important;
    }

    .navbar,
    .navbar-nav,
    .nav-link {
        --bs-navbar-color: #{$light};
        --bs-navbar-link-color: #{$light};
        --bs-navbar-hover-color: #{$link-color-dark};
        --bs-nav-link-hover-color: #{$link-color-dark};
        --bs-navbar-disabled-color: var(--link-disabled-color);
        --bs-nav-link-disabled-color: var(--link-disabled-color);
    }
}

@import 'filters';
